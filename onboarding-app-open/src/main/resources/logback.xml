<?xml version="1.0" encoding="UTF-8"?>
<!--
* ===============LICENSE_START=======================================================
* Acumos
* ===================================================================================
* Copyright (C) 2019 AT&T Intellectual Property & Tech Mahindra. All rights reserved.
* ===================================================================================
* This Acumos software file is distributed by AT&T and Tech Mahindra
* under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions
* and limitations under the License.
* ===============LICENSE_END=========================================================
*/ -->

<configuration scan="true" scanPeriod="3 seconds" debug="false">

	<!-- gather files in a subdirectory - usually a volume in docker -->
	<property name="logDirPrefix" value="logs" />

	<!-- component name is log file basename -->
	<property name="componentName" value="on-boarding" />

	<!-- The directories where logs are written -->
	<property name="logDirectory" value="${logDirPrefix}/${componentName}" />

	<!-- Based on https://wiki.acumos.org/display/OAM/Acumos+Log+Standards -->
	<property name="LogTimestamp"
		value="%d{&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;, UTC}" />
	<property name="Level" value="%.-5level" />
	<property name="Logger" value="%logger" />
	<property name="Mdc"
		value="%replace(%replace(%mdc){'\t','\\\\t'}){'\n','\\\\n'}" />
	<property name="Marker"
		value="%replace(%replace(%marker){'\t','\\\\t'}){'\n','\\\\n'}" />
	<property name="Thread" value="%thread" />
	<property name="Message"
		value="%replace(%replace(%msg){'\t','\\\\t'}){'\n','\\\\n'}" />
	<!-- Gather exception stack trace with no linebreaks -->
	<property name="Exception"
		value="%replace(%replace(%ex){'\t', '\\\\t'}){'\n','\\\\n'}" />


	<!-- Use %nopexception to disable Logback default behavior of appending
		%ex -->

	<property name="singleLineBoreasPattern"
		value="%nopexception${LogTimestamp}\t${Thread}\t${Level}\t${Logger}\t${Marker}\t${Mdc}\t${Message}\t${Exception}%n" />
	<property name="multiLineBoreasPattern"
		value="${LogTimestamp}\t${Thread}\t${Level}\t${Logger}\t${Marker}\t${Mdc}\t%msg\t%ex%n" />

	<!-- Uncomment below code for filter if need to show events with level WARN
		or above on the console (docker log) -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter"> <level>WARN</level>
			</filter> -->
		<encoder>
			<pattern>${multiLineBoreasPattern}</pattern>
		</encoder>
	</appender>

	<!-- Show all events in the rolling log file -->
	<appender name="file-rolling"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${logDirectory}/${componentName}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<fileNamePattern>${logDirectory}/${componentName}.%d{yyyy-MM-dd}.log.zip
			</fileNamePattern>
			<!-- keep 30 days' worth of history capped at 3GB total size -->
			<maxHistory>30</maxHistory>
			<totalSizeCap>3GB</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>${singleLineBoreasPattern}</pattern>
		</encoder>
	</appender>
	<appender name="file-async" class="ch.qos.logback.classic.AsyncAppender">
		<queueSize>256</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="file-rolling" />
	</appender>

	<!-- The root level is the default for all loggers, NOT a filter on any
		appender. This level can be set with property logging.level.root=LEVEL. -->
	<root level="DEBUG">
		<appender-ref ref="file-async" />
		<appender-ref ref="STDOUT" />
	</root>
	
	<logger name="org.apache" level="WARN" />
    <logger name="httpclient" level="WARN" /> 
</configuration>