<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.acumos.on-boarding</groupId>
	<artifactId>onboarding-common</artifactId>
	<version>1.13.0</version>
	<packaging>jar</packaging>
	<name>onboarding-common</name>
	<description>Onboarding common project</description>


	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- <start-class>org.acumos.onboarding.Application</start-class> -->
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<eelf.version>1.0.0</eelf.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>

		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>

		</dependency>
		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java</artifactId>
			<version>3.0.10</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>

		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
			<version>2.0.8</version>
			 <exclusions>
              <exclusion>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
              </exclusion>
            </exclusions>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jpmml</groupId>
			<artifactId>pmml-evaluator</artifactId>
			<version>1.3.10</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.java-json-tools</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>2.2.8</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<!-- Spring chooses <version>${slf4j.version}</version> -->
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<!-- Spring chooses <version>${logback.version}</version> -->
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<!-- Spring chooses <version>${logback.version}</version> -->
		</dependency>
		<dependency>
			<groupId>com.att.eelf</groupId>
			<artifactId>eelf-core</artifactId>
			<version>${eelf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>1.13.7.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.acumos.common-dataservice</groupId>
			<artifactId>cmn-data-svc-client</artifactId>
			<version>1.13.1</version>
		</dependency>

		<dependency>
			<groupId>org.acumos.acumos-nexus-client</groupId>
			<artifactId>acumos-nexus-client</artifactId>
			<version>2.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.wagon</groupId>
			<artifactId>wagon-provider-api</artifactId>
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.9</version>
		</dependency>

		<dependency>
			<groupId>org.acumos.design-studio</groupId>
			<artifactId>TOSCAModelGeneratorClient</artifactId>
			<version>0.0.23</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!-- Spring sets the <version>4.11</version> -->
			<scope>test</scope>
		</dependency>

	</dependencies>
	<!-- <repositories> <repository> <id>acumos-snapshots</id> <name>mlp-repository-snapshots</name> 
		<url>${acumos.nexus.url}/${acumos.nexus.snapshot.path}</url> </repository> 
		<repository> <id>acumos-releases</id> <name>mlp-repository-releases</name> 
		<url>${acumos.nexus.url}/${acumos.nexus.release.path}</url> </repository> 
		</repositories> -->
	<build>

		<sourceDirectory>src/main/java</sourceDirectory>
		<!-- <finalName>onboarding-app</finalName> -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>

					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Number>${project.version}.${build.number}</Build-Number>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> 
				<executions> <execution> <goals> <goal>repackage</goal> </goals> <configuration> 
				<classifier>exec</classifier> </configuration> </execution> </executions> 
				<configuration> <includeSystemScope>true</includeSystemScope> </configuration> 
				</plugin> -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<!-- Spring sets the <version>2.8</version> -->
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>io.fabric8</groupId> <artifactId>docker-maven-plugin</artifactId> 
				<version>0.21.0</version> <configuration> <verbose>true</verbose> <dockerHost>${docker.host.url}</dockerHost> 
				<registry>${docker.registry.url}</registry> <authConfig> <username>${docker.registry.login}</username> 
				<password>${docker.registry.password}</password> </authConfig> <images> <image> 
				<name>onboarding-app:${project.version}</name> <build> This is the same FROM 
				used in a Dockerfile <from>openjdk:8-jdk</from> <assembly> <inline> <files> 
				<file> <source>application.properties.template</source> <outputDirectory 
				/> <destName>application.properties</destName> </file> <file> <source>target/${project.artifactId}-${project.version}.${project.packaging}</source> 
				<outputDirectory /> </file> </files> </inline> </assembly> This is the same 
				CMD used in a Dockerfile <cmd> <shell>cd /maven; java -Djava.security.egd=file:/dev/./urandom 
				-jar ${project.artifactId}-${project.version}.${project.packaging}</shell> 
				</cmd> </build> </image> </images> </configuration> </plugin> -->
		</plugins>
	</build>


	<!-- <distributionManagement> <snapshotRepository> <id>acumos-nexus</id> 
		<name>acumos-repository-snapshots</name> <url>${acumos.nexus.url}/${acumos.nexus.snapshot.path}</url> 
		</snapshotRepository> <repository> <id>acumos-nexus</id> <name>acumos-repository-releases</name> 
		<url>${acumos.nexus.url}/${acumos.nexus.release.path}</url> </repository> 
		</distributionManagement> -->
</project>
